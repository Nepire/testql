#!/bin/sh /etc/rc.common

STOP=20

PIPE_PATH="/tmp/thunder/etm_hubble_report.pipe"

#export command line for /usr/sbin/supervisord
export PROCLINE="nice -n+10 /usr/sbin/xunlei.sh &"
export PROCFLAG="/usr/sbin/etm --system_path=/tmp/thunder --disk_cfg=/etc/config/thunder/thunder_mounts.cfg --etm_cfg=/etc/config/thunder/etm.ini --log_cfg=/etc/config/thunder/log.ini --deviceid=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx --hardwareid=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx --pid_file=/var/run/xunlei.pid --license=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx --import_v1v2_mode=2 --hubble_report_pipe_path=$PIPE_PATH --partnerid=595"

export PROC_USE_CGROUP_PATH="/dev/cgroup/net_cls/limited/tasks;/dev/cgroup/mem/group1/tasks"
export EXTRA_COMMANDS=" status"

#super-port set

TCPPORTS='1080 4662 2080 2062'
UDPPORTS='4661 3027 888 666 2037 2061 2048 2066'

#port access forbidden, only limited in localhost
N_TCPPORTS="9000"

#flag=`uci get xiaoqiang.common.PRIVACY`
flag=0

set_xunlei_firewall(){
	local ctlop="$1"
	if [ -z "$ctlop" ]
		then
		ctlop='stop'
	fi
	if [ "$ctlop" != 'stop' -a "$ctlop" != 'start' ]
		then
		echo "WARNING: unknow operation: $ctlop, set to stop."
		ctlop='stop'
	fi
	if [ "$ctlop" = 'stop' ]
		then
			uci delete firewall.xunleiwantcpports 2>/dev/null
			uci delete firewall.xunleiwanudpports 2>/dev/null
			uci delete firewall.xunleiN_TCPports 2>/dev/null
			uci commit
			if [ $? -ne 0 ]
				then
				echo "ERROR: remove xunleiwan rules config/firewall failed."
				return 1
			else
				fw3 reload >/dev/null 2>&1
				return $?
			fi
		return 0
	fi
	#start here
	uci set firewall.xunleiwantcpports=rule 2>/dev/null
	uci set firewall.xunleiwantcpports.name="xunlei wan accept tcp port $TCPPORTS" 2>/dev/null
	uci set firewall.xunleiwantcpports.src=wan 2>/dev/null
	uci set firewall.xunleiwantcpports.dest_port="${TCPPORTS}" 2>/dev/null
	uci set firewall.xunleiwantcpports.proto=tcp 2>/dev/null
	uci set firewall.xunleiwantcpports.target=ACCEPT 2>/dev/null

	uci set firewall.xunleiwanudpports=rule 2>/dev/null
	uci set firewall.xunleiwanudpports.name="xunlei wan accept udp port $UDPPORTS" 2>/dev/null
	uci set firewall.xunleiwanudpports.src=wan 2>/dev/null
	uci set firewall.xunleiwanudpports.dest_port="${UDPPORTS}" 2>/dev/null
	uci set firewall.xunleiwanudpports.proto=udp 2>/dev/null
	uci set firewall.xunleiwanudpports.target=ACCEPT 2>/dev/null

    #port limit only for localhost
	uci set firewall.xunleiN_TCPports=rule 2>/dev/null
	uci set firewall.xunleiN_TCPports.name="xunlei_port_limit_localhost $N_TCPPORTS" 2>/dev/null
	uci set firewall.xunleiN_TCPports.src=* 2>/dev/null
	uci set firewall.xunleiN_TCPports.dest_port="${N_TCPPORTS}" 2>/dev/null
	uci set firewall.xunleiN_TCPports.proto=tcp 2>/dev/null
	uci set firewall.xunleiN_TCPports.target=REJECT 2>/dev/null

	uci commit firewall

	if [ $? -ne 0 ]
		then
		echo "ERROR: setup xunleiwan rules config/firewall failed."
		return 1
	else
		fw3 reload >/dev/null 2>&1
		return $?
	fi
}

start() {
	set_xunlei_firewall start

	mkdir -p /tmp/thunder
	[ "$flag" = "1" ] && {
		/usr/sbin/hubble --system_path=/tmp/thunder --hubble_report_pipe_path=$PIPE_PATH --hubble_log_cfg=/etc/config/thunder/hubble_log.ini --etm_cfg=/etc/config/thunder/etm.ini &
	}
	/usr/sbin/supervisord start
	return $?
}

stop() {
	if [ "$PROC_CALLER" != "/etc/init.d/rcS K shutdown" ]
		then
		set_xunlei_firewall stop
	fi

	/usr/sbin/supervisord stop
	#killall -9 hubble
	return $?
}

restart() {
	stop
	sleep 1
	start
	return $?
}

reload(){
	stop
	sleep 1
	rm /userdisk/ThunderDB -rf
	start
	return $?
}

status() {
	/usr/sbin/supervisord status
	ret=$?
	echo $ret
	return $ret
}

#
